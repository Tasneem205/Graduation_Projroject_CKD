// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Assistant {
  AssistantID Int        @id @default(autoincrement())
  FirstName   String
  LastName    String
  Email       String     @unique
  Password    String
  patients    patients[]
  // img
}

model blackList {
  id  Int    @id @default(autoincrement())
  jwt String
  exp Int
}

model DailyProgress {
  ProregressID Int      @id @default(autoincrement())
  ProgressData DateTime
  PatientID    Int
  WaterML      Int
  WalkingTime  DateTime @db.Time
  WalkingSteps Int
  Excercise    DateTime @db.Time

  patient patients @relation(fields: [PatientID], references: [PatientID])
}

model Diabetes {
  PatientID      Int
  date           DateTime
  diabetes_value Int
  patient        patients @relation(fields: [PatientID], references: [PatientID])

  @@id([PatientID, date])
}

model Doctors {
  DoctorID      Int             @id @default(autoincrement())
  FirstName     String
  LastName      String
  Phone_num     String
  Email         String          @unique
  Password      String
  prescriptions prescriptions[]
  patients      patients[]
}

model followup {
  followupID     Int      @id @default(autoincrement())
  prescriptionID Int
  followup_date  DateTime
  followup_notes String

  prescription prescriptions @relation(fields: [prescriptionID], references: [prescriptionID])
}

model kidney_scan {
  Scan_ID   Int      @id @default(autoincrement())
  PatientID Int
  ScanDate  DateTime
  img       String
  class     String
  patient   patients @relation(fields: [PatientID], references: [PatientID])
}

model kidney_test {
  TestID    Int      @id @default(autoincrement())
  TestDate  DateTime
  PatientID Int
  pot       Float
  hemo      Float
  pcv       Float
  wbc       Float
  rbc       Float
  pc        String
  pcc       String
  ba        String
  htl       String
  dm        String
  cad       String
  appet     String
  pe        String
  ane       String
  age       Int
  bp        String
  bgr       Float
  bu        Float
  sc        Float
  sod       Float
  sg        String
  al        String
  su        String
  class     String

  patient patients @relation(fields: [PatientID], references: [PatientID])
}

model medications {
  medicationID             Int                        @id @default(autoincrement())
  medication_name          String
  dosage_form              String
  manufacturer             String
  generic_name             String
  therapeutic_class        String
  prescriptions_medication prescriptions_medication[]
}

model patients {
  PatientID        Int      @id @default(autoincrement())
  FirstName        String
  LastName         String
  DateOfBirth      DateTime
  Gender           String
  Email            String
  Password         String
  DoctorID         Int
  Job              String
  bloodGroup       String
  hieght           Float
  weight           Float
  assistantID      Int
  registrationDate DateTime

  kidney_scan   kidney_scan[]
  kidney_test   kidney_test[]
  DailyProgress DailyProgress[]
  prescriptions prescriptions[]

  Doctor    Doctors    @relation(fields: [DoctorID], references: [DoctorID])
  assistant Assistant  @relation(fields: [assistantID], references: [AssistantID])
  Diabetes  Diabetes[]
  pressure  pressure[]
}

model prescriptions {
  prescriptionID    Int      @id @default(autoincrement())
  PatientID         Int
  DoctorID          Int
  prescription_date DateTime
  ExpiryDate        DateTime

  followup followup[]

  patient patients @relation(fields: [PatientID], references: [PatientID])
  doctor  Doctors  @relation(fields: [DoctorID], references: [DoctorID])
}

model prescriptions_medication {
  prescriptionID Int    @id @default(autoincrement())
  medicationID   Int
  dosage         String
  frequency      String
  instructions   String

  mediaction medications @relation(fields: [medicationID], references: [medicationID])
}

model pressure {
  PatientID    Int
  date         DateTime
  pressureHigh Int
  pressureLow  Int
  heart_rate   Int

  patient patients @relation(fields: [PatientID], references: [PatientID])

  @@id([PatientID, date])
}

model video {
  VideoId   Int      @id @default(autoincrement())
  Title     String
  Category  String
  Descript  String
  Duration  DateTime @db.Time
  Thumbnail String
}

// VIEWS
model homepage {
  day        DateTime @id @default(now())
  doctors    Int
  patients   Int
  lab_tests  Int
  // reports Int
  scans      Int
  assistants Int

  @@map("name: homepageView")
}
